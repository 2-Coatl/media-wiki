#!/bin/bash
# Generate secure credentials

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"

_secrets_file="$PROJECT_ROOT/config/secrets.env"

generate_password() {
    local _length="${1:-16}"
    openssl rand -base64 32 | tr -d "=+/" | cut -c1-"$_length"
}

if [[ -f "$_secrets_file" ]]; then
    echo "secrets.env already exists"
    read -p "Overwrite? (y/N): " _confirm
    if [[ "$_confirm" != "y" ]] && [[ "$_confirm" != "Y" ]]; then
        echo "Cancelled"
        exit 0
    fi

    echo "Backing up existing file..."
    cp "$_secrets_file" "${_secrets_file}.backup.$(date +%Y%m%d-%H%M%S)"
fi

echo "Generating credentials..."

cat > "$_secrets_file" << EOF
DB_PASSWORD='$(generate_password 16)'
DB_ROOT_PASSWORD='$(generate_password 16)'
WIKI_ADMIN='admin'
WIKI_ADMIN_PASSWORD='$(generate_password 16)'
WIKI_ADMIN_EMAIL='admin@example.com'
NAGIOS_ADMIN='nagiosadmin'
NAGIOS_ADMIN_PASSWORD='$(generate_password 16)'
EOF

chmod 600 "$_secrets_file"

echo ""
echo "Credentials generated: $_secrets_file"
echo ""
echo "IMPORTANT: Save these credentials securely!"
echo ""
cat "$_secrets_file"
echo ""
echo "File permissions set to 600 (owner read/write only)"
echo ""