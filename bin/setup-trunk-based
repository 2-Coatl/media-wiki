#!/bin/bash
# Setup trunk-based development environment

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"

_green='\033[0;32m'
_blue='\033[0;34m'
_yellow='\033[1;33m'
_nc='\033[0m'

echo ""
echo "======================================"
echo "  TRUNK-BASED SETUP"
echo "======================================"
echo ""

cd "$PROJECT_ROOT"

echo -e "${_blue}[1/5] Installing Git hooks${_nc}"
if [[ -f "infrastructure/git_hooks/install-hooks.sh" ]]; then
    bash infrastructure/git_hooks/install-hooks.sh
    echo -e "${_green}Git hooks installed${_nc}"
else
    echo -e "${_yellow}Git hooks script not found${_nc}"
fi

echo ""
echo -e "${_blue}[2/5] Checking required tools${_nc}"

_check_tool() {
    if command -v "$1" &>/dev/null; then
        echo -e "${_green}[OK]${_nc} $1"
        return 0
    else
        echo -e "${_yellow}[MISSING]${_nc} $1"
        return 1
    fi
}

_check_tool "git"
_check_tool "vagrant"
_check_tool "shellcheck" || echo "  Install: sudo apt-get install shellcheck"
_check_tool "shfmt" || echo "  Install: go install mvdan.cc/sh/v3/cmd/shfmt@latest"

echo ""
echo -e "${_blue}[3/5] Creating .editorconfig${_nc}"
if [[ ! -f ".editorconfig" ]]; then
    cat >.editorconfig <<'EOF'
root = true

[*]
charset = utf-8
end_of_line = lf
insert_final_newline = true
trim_trailing_whitespace = true

[*.sh]
indent_style = space
indent_size = 4

[*.md]
trim_trailing_whitespace = false

[Vagrantfile]
indent_style = space
indent_size = 2
EOF
    echo -e "${_green}.editorconfig created${_nc}"
else
    echo -e "${_yellow}.editorconfig exists${_nc}"
fi

echo ""
echo -e "${_blue}[4/5] Creating .shellcheckrc${_nc}"
if [[ ! -f ".shellcheckrc" ]]; then
    cat >.shellcheckrc <<'EOF'
enable=all
disable=SC2034
external-sources=true
EOF
    echo -e "${_green}.shellcheckrc created${_nc}"
else
    echo -e "${_yellow}.shellcheckrc exists${_nc}"
fi

echo ""
echo -e "${_blue}[5/5] Configuring Git${_nc}"
git config pull.rebase true 2>/dev/null || true
echo -e "${_green}[OK]${_nc} pull.rebase = true"

git config init.defaultBranch main 2>/dev/null || true
echo -e "${_green}[OK]${_nc} defaultBranch = main"

echo ""
echo "======================================"
echo -e "${_green}  SETUP COMPLETE${_nc}"
echo "======================================"
echo ""
echo "Next steps:"
echo "  1. Edit infrastructure scripts"
echo "  2. Commit: git commit -m 'feat: ...'"
echo "  3. Push: git push origin main"
echo "  4. Deploy: bash infrastructure/deploy/deploy-vagrant.sh"
echo ""
echo "Manual commands:"
echo "  Quality:  bash infrastructure/quality/run-quality.sh"
echo "  Snapshot: bash infrastructure/deploy/snapshot-create.sh"
echo ""
